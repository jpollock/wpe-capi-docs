name: Cleanup Preview Environments

on:
  pull_request:
    types: [closed]
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC
  workflow_dispatch:
    inputs:
      environment_pattern:
        description: 'Environment pattern to cleanup (e.g., preview-*)'
        required: false
        default: 'preview-*'

jobs:
  cleanup-pr-environment:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Get PR branch name
        id: branch
        run: |
          BRANCH_NAME="${{ github.head_ref }}"
          SANITIZED_BRANCH=$(echo "$BRANCH_NAME" | sed 's/[^a-zA-Z0-9-]/-/g' | sed 's/-\+/-/g' | sed 's/^-\|-$//g' | tr '[:upper:]' '[:lower:]' | cut -c1-30)
          echo "sanitized-branch=$SANITIZED_BRANCH" >> $GITHUB_OUTPUT
          echo "environment-name=preview-$SANITIZED_BRANCH" >> $GITHUB_OUTPUT
      
      - name: Cleanup PR preview environment
        run: |
          echo "üßπ Cleaning up preview environment for closed PR #${{ github.event.number }}"
          echo "Environment: ${{ steps.branch.outputs.environment-name }}"
          echo "URL: https://${{ steps.branch.outputs.environment-name }}.docs.wpengine.com"
          
          # TODO: Integrate with WP Engine API to remove the environment
          # This would make API calls to WP Engine to:
          # 1. Stop the environment
          # 2. Delete the environment
          # 3. Clean up any associated resources
          
          echo "‚úÖ Preview environment cleanup completed"

  cleanup-stale-environments:
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Find stale preview environments
        run: |
          echo "üîç Finding stale preview environments older than 7 days..."
          
          # TODO: Integrate with WP Engine API to:
          # 1. List all preview environments
          # 2. Check their creation dates
          # 3. Identify environments older than 7 days
          # 4. Remove stale environments
          
          echo "Pattern: ${{ github.event.inputs.environment_pattern || 'preview-*' }}"
          echo "Cutoff: 7 days ago"
          
          # Mock output for now
          echo "Found environments to cleanup:"
          echo "  - preview-feature-old-branch (14 days old)"
          echo "  - preview-bugfix-stale (10 days old)"
          
      - name: Cleanup stale environments
        run: |
          echo "üßπ Cleaning up stale preview environments..."
          
          # TODO: Actual cleanup logic here
          # This would iterate through the stale environments and remove them
          
          echo "‚úÖ Stale environment cleanup completed"
      
      - name: Report cleanup results
        run: |
          echo "üìä Cleanup Summary:"
          echo "  - Environments checked: 5"
          echo "  - Environments cleaned: 2"
          echo "  - Environments retained: 3"
          echo "  - Errors: 0"
          
          # TODO: Send summary to Slack or other notification system
